{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","TodoInfo","todo","classNames","completed","title","TodoList","preparedTodos","map","preparedTodo","getUser","userId","usersFromServer","find","App","useState","todos","setTodos","todoTitle","setTodoTitle","selectedUser","setSelectedUser","hasTodoError","setTodoError","hasSelectedUserError","setSelectedUserError","action","method","onSubmit","event","preventDefault","newTodo","sortedTodos","sort","todo1","todo2","length","getMaxId","currentToDo","value","type","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf5d23b0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <div className=\"UserInfo\">\n      <div data-cy=\"username\">\n        {user.name}\n      </div>\n\n      <div data-cy=\"email\">\n        {user.email}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <>\n      <li\n        className={classNames(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': todo.completed,\n          },\n        )}\n        data-id={todo.id}\n      >\n        <div className=\"TodoInfo__title\">\n          {todo.title}\n        </div>\n\n        <div className=\"TodoInfo--completed\">\n          {todo.completed ? 'Completed by:' : 'Not completed by:'}\n        </div>\n        {todo.user !== null ? <UserInfo user={todo.user} /> : <></>}\n      </li>\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n// import './TodoList.scss';\n\ntype Props = {\n  preparedTodos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos }) => {\n  return (\n    <ul className=\"todoList\">\n      {preparedTodos.map(preparedTodo => (\n        <TodoInfo\n          todo={preparedTodo}\n          key={preparedTodo.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n  const defaultUser = { name: '', email: '' };\n\n  return foundUser || defaultUser;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId) || null,\n}));\n\ntype Props = {\n  preparedTodos: Todo[],\n};\n\nexport const App: React.FC<Props> = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [hasTodoError, setTodoError] = useState(false);\n  const [hasSelectedUserError, setSelectedUserError] = useState(false);\n\n  function onSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    const getMaxId = () => {\n      const sortedTodos = [...todos]\n        .sort((todo1, todo2) => todo1.id - todo2.id);\n\n      return sortedTodos[sortedTodos.length - 1].id + 1;\n    };\n\n    const newTodo: Todo = {\n      id: getMaxId(),\n      title: todoTitle,\n      completed: false,\n      user: {\n        name: getUser(+selectedUser).name,\n        email: getUser(+selectedUser).email,\n      },\n    };\n\n    setTodoError(!todoTitle);\n    setSelectedUserError(selectedUser === '0');\n\n    if (!todoTitle || newTodo.user?.name === '') {\n      return;\n    }\n\n    setTodos(currentToDo => [...currentToDo, newTodo]);\n    setTodoTitle('');\n    setSelectedUser('0');\n    setSelectedUserError(false);\n    setTodoError(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <input\n            value={todoTitle}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={event => {\n              setTodoError(false);\n              setTodoTitle(event.target.value.replace(/[^a-zA-Z0-9]/g, ''));\n            }}\n          />\n\n          {hasTodoError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={selectedUser}\n            data-cy=\"userSelect\"\n            onChange={event => {\n              setSelectedUserError(false);\n              setSelectedUser(event.target.value);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasSelectedUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList preparedTodos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App preparedTodos={[]} />, document.getElementById('root'));\n"],"sourceRoot":""}